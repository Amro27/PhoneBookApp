{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { User } from './models/user';\r\nimport { UserService } from './services/user.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  users: User[];\r\n  userForm: boolean;\r\n  isNewUser: boolean;\r\n  newUser: any = {};\r\n  editUserForm: boolean;\r\n  editedUser: any = {};\r\n\r\n  constructor(private userService: UserService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.users = this.getUsers();\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(11), Validators.pattern(/^[0-9]*$/)]],\r\n      // lastName: ['', Validators.required, Validators.pattern(new RegExp(\"[0-9 ]{12}\"))],\r\n      // email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(3),\r\n        Validators.pattern(/^[A-z]*$/)]]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop the process here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    alert('SUCCESS!!');\r\n  }\r\n\r\n  getUsers(): User[] {\r\n    return this.userService.getUsersFromData();\r\n  }\r\n\r\n  showEditUserForm(user: User) {\r\n    if (!user) {\r\n      this.userForm = false;\r\n      return;\r\n    }\r\n    this.editUserForm = true;\r\n    this.editedUser = user;\r\n  }\r\n\r\n  showAddUserForm() {\r\n    // resets form if edited user\r\n    if (this.users.length) {\r\n      this.newUser = {};\r\n    }\r\n    this.userForm = true;\r\n    this.isNewUser = true;\r\n\r\n  }\r\n\r\n  saveUser(user: User) {\r\n    if (this.isNewUser) {\r\n      // add a new user\r\n      this.userService.addUser(user);\r\n    }\r\n    this.userForm = false;\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.editedUser);\r\n    this.editUserForm = false;\r\n    this.editedUser = {};\r\n  }\r\n\r\n  removeUser(user: User) {\r\n    this.userService.deleteUser(user);\r\n  }\r\n\r\n  cancelEdits() {\r\n    this.editedUser = {};\r\n    this.editUserForm = false;\r\n  }\r\n\r\n  cancelNewUser() {\r\n    this.newUser = {};\r\n    this.userForm = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mt-4\">\r\n      <h1 class=\"text-center\">User List</h1>\r\n      <input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search for names..\" title=\"Type in a name\">\r\n      <table id=\"myTable\" class=\"table table-bordered table-striped table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <!-- <th class=\"text-center\">ID</th> -->\r\n            <th class=\"text-center\">Name</th>\r\n            <th class=\"text-center\">Number</th>\r\n            <th class=\"text-center\">&nbsp;</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let user of users\">\r\n            <!-- <td>{{ user.id }}</td> -->\r\n            <td>{{ user.Name }}</td>\r\n            <td>{{ user.Number }}</td>\r\n\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-info btn-sm mr-2\" (click)=\"showEditUserForm(user)\">Edit</button>\r\n\r\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeUser(user)\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button class=\"btn btn-success\" (click)=\"showAddUserForm()\">Add New User</button>\r\n\r\n      <div class=\"mt-4\">\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"userForm\" #loginForm=\"ngForm\">\r\n          <h2>Add New User</h2>\r\n          <div class=\"form-group\">\r\n              <label>Name</label>\r\n              <input name=\"password\" [(ngModel)]=\"newUser.Name\" type=\"text\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &amp;&amp; registerForm.controls.password.errors }\"  />\r\n              <div *ngIf=\"registerForm.controls.password.errors\" class=\"text-danger\">\r\n                  <div *ngIf=\"registerForm.controls.password.errors.required\">Name is required</div>\r\n                  <div *ngIf=\"registerForm.controls.password.errors.minlength\">Name must be at least 3 characters</div>\r\n                  <div *ngIf=\"registerForm.controls.password.errors.pattern\">Name must only contain characters</div>\r\n              </div>\r\n              <label>Number</label>\r\n              <input name=\"firstName\" [(ngModel)]=\"newUser.Number\" type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &amp;&amp; registerForm.controls.firstName.errors }\"  />\r\n              <div *ngIf=\"registerForm.controls.firstName.errors\" class=\"text-danger\">\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.required\">Number is required</div>\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">Number must be 11 numbers</div>\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.pattern\">Number cannnot contain characters</div>\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <button class=\"btn btn-primary\" [disabled]=\"loginForm.form.invalid\" (click)=\"saveUser(newUser)\">Submit</button>\r\n              <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\r\n          </div>\r\n        </form>\r\n        <!-- <form *ngIf=\"userForm\">\r\n          <h2>Add New User</h2>\r\n          <p>Name: <input type=\"text\" name=\"firstName\" [(ngModel)]=\"newUser.Name\" /></p>\r\n          <p>Number: <input type=\"text\" name=\"lastName\" [(ngModel)]=\"newUser.Number\" /></p>\r\n          <p>\r\n            <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\r\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\r\n          </p>\r\n        </form> -->\r\n\r\n        <!-- <form *ngIf=\"editUserForm\">\r\n          <h2>Edit User Details</h2>\r\n          <p>Name: <input type=\"text\" name=\"Name\" [(ngModel)]=\"editedUser.Name\" /></p>\r\n          <p>Number: <input type=\"text\" name=\"Number\" [(ngModel)]=\"editedUser.Number\" /></p>\r\n          <p>\r\n            <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser()\">Submit</button>\r\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits()\">Cancel</button>\r\n          </p>\r\n        </form> -->\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"editUserForm\" #loginForm=\"ngForm\">\r\n          <h2>Edit User Details</h2>\r\n          <div class=\"form-group\">\r\n              <label>Name</label>\r\n              <input name=\"password\" [(ngModel)]=\"editedUser.Name\" type=\"text\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &amp;&amp; registerForm.controls.password.errors }\"  />\r\n              <div *ngIf=\"registerForm.controls.password.errors\" class=\"text-danger\">\r\n                  <div *ngIf=\"registerForm.controls.password.errors.required\">Name is required</div>\r\n                  <div *ngIf=\"registerForm.controls.password.errors.minlength\">Name must be at least 3 characters</div>\r\n                  <div *ngIf=\"registerForm.controls.password.errors.pattern\">Name must only contain characters</div>\r\n              </div>\r\n              <label>Number</label>\r\n              <input name=\"firstName\" [(ngModel)]=\"editedUser.Number\" type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &amp;&amp; registerForm.controls.firstName.errors }\"  />\r\n              <div *ngIf=\"registerForm.controls.firstName.errors\" class=\"text-danger\">\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.required\">Number is required</div>\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.minlength\">Number must be 11 numbers</div>\r\n                  <div *ngIf=\"registerForm.controls.firstName.errors.pattern\">Number cannnot contain characters</div>\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <button class=\"btn btn-primary\" [disabled]=\"loginForm.form.invalid\" (click)=\"updateUser()\">Submit</button>\r\n              <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private upersons: User[] = [\r\n    {\r\n      id:1,\r\n      Name: 'Mohamed',\r\n      Number: '01114356698'\r\n    },\r\n    {\r\n      id:2,\r\n      Name: 'Ahmed',\r\n      Number: '01220290394'\r\n    }\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  getUsersFromData(): User[] {\r\n    return this.upersons;\r\n  }\r\n\r\n  addUser(user: User) {\r\n    user.id = this.upersons.length + 1;\r\n    this.upersons.push(user);\r\n\r\n  }\r\n  updateUser(user: User) {\r\n    const index = this.upersons.findIndex(u => user.id === u.id);\r\n    this.upersons[index] = user;\r\n  }\r\n  deleteUser(user: User) {\r\n    this.upersons.splice(this.upersons.indexOf(user), 1);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}